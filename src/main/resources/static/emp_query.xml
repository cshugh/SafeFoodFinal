<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.hrm.model.dao.EmpDao">
	<resultMap type="Emp" id="EmpResultMap"> <!-- type은 VO, id는 고유한 이름 -->
		<id column="eid" property="id"/> <!-- primary key property는 vo꺼-->
		<!-- <id column="eid" property="id"/> 복합키의 경우 걍 id 여러개 주면 됨--> 		
		<result column="ename" property="name"/> <!-- others columns -->
		<result column="did" property="dept_id"/>
	</resultMap>
	<!-- 레코드랑 vo를 어떻게 매핑할 건지 -->
	<select id="findAllEmployees" resultMap="EmpResultMap">
		select id eid, name as ename, dept_id did from s_emp order by id;
	</select>
	<!-- 자동으로 생성한 값을 객체에 넣어준다는데
	     컨트롤러가 emp객체 레퍼런스를 물고 있음(id가 비어있는 상태)
	    이걸 서비스가 레퍼런스 보고 있고, 또 호출해서 dao가 레퍼런스보고 있고, 또 호출된 mybatis도 보고있다
	    근데 마이바티스에서 객체 내용을 채워넣음 그러면 돌아왔을때 이미 반영이 되어있다.
	    걍 보낸거 꺼내기만 하면됨   
	      -->
	<!-- useGeneratedKeys = true해줘야하고 keyProperty : 어디에 담아줘야하는지 
	<insert id="addEmployee" useGeneratedKeys = "true" keyProperty="id">
		insert into s_emp(id
						, name
						, mailid
						, start_date
						, manager_id
						, title
						, dept_id
						, salary
						, commission_pct)
		 values( 0
				, #{name}
				, #{mailid}
				, str_to_date(#{start_date},'%d-%b-%Y')
				, #{manager_id}
				, #{title}
				, #{dept_id}
				, #{salary}
				, #{commission_pct});
	</insert> -->
	<insert id="addEmployee" parameterType = "emp">
		insert into s_emp(id
						, name
						, mailid
						, start_date
						, manager_id
						, title
						, dept_id
						, salary
						, commission_pct)
		 values( 0
				, #{name}
				, #{mailid}
				, str_to_date(#{start_date},'%d-%b-%Y')
				, #{manager_id}
				, #{title}
				, #{dept_id}
				, #{salary}
				, #{commission_pct});
	</insert>
	<update id="updateEmployee" parameterType="emp">
		update s_emp set name = #{name}
				, mailid = #{mailid}
				, start_date = str_to_date(#{start_date},'%d-%b-%Y')
				, manager_id = #{manager_id}
				, title = #{title}
				, dept_id = #{dept_id}
				, salary = #{salary}
				, commission_pct = #{commission_pct}
                where id =#{id};
	</update>
	<delete id="deleteEmployee" parameterType="integer">
		delete from s_emp where id = #{id};
	</delete>
<!-- 
	<select id="findAllEmployees" resultType="emp">
		select * from s_emp;
	</select> -->
	<select id="findAllTitles" resultType="string">
		select title from s_emp group by title;
	</select>
	<select id="findEmployeeById" parameterType="integer" resultType ="emp">
		select * from s_emp where id = #{id};
	</select>
	<select id="findLikeEmployees" parameterType="string" resultType ="emp">
		select * from s_emp where name like concat('%',#{name},'%');
	</select>
	<select id="getEmployeesTotal" resultType="integer">
		select count(*) from s_emp;
	</select>

	
</mapper>






