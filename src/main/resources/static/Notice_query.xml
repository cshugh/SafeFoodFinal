<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
	
<mapper namespace="com.ssafy.model.dao.NoticeDao">
	<select id="getNoticeNo"   	resultType="int" >
		select max(no)+1 from notice
	</select>
	<!-- result Map
		1. 컬럼명과 객체의 속성명이 다를때 매핑시키기 위해 
		2. join할 정보를 객체에 매핑시키기 위해 
	 -->
	<resultMap type="noticefile" id="fileMap">
		<!-- primary key는 id 태그를 이용해서 매핑 -->
		<id 		column="fileno"			property="no"/>
		
		<!-- 일반 컬럼은 result 태그를 이용해서 매핑 -->
		<result		column="rfilename"	property="rfilename"/>
		<result		column="sfilename"	property="sfilename"/>
		<result		column="notino"		property="notino"/>
	</resultMap>
	<resultMap type="notice" 	id="noticeMap">
		<id			column="no"			 property="no"/>
		<result		column="id"			 property="id"/>
		<result		column="isImportant" property="isImportant"/>	
		<result		column="category" 	 property="category"/>	
		<result		column="title"		 property="title"/>	
		<result		column="regdate"	 property="regdate"/>	
		<result		column="contents"	 property="contents"/>	
		<!-- join 매핑
		     1:1   association  태그로 매핑
		     1:N   collection	태그로 매핑
		     
			 property="객체에 선언된 속성이름"	
			 ofType="N의 타입 or 알리아스"	
			 resultMap="N의 resultMap으로 설정한 id"
			 내 맵의 아이디     
		 -->
		<collection property="files"	ofType="noticefile"	resultMap="fileMap" />
	</resultMap>
	
	<select id="search" parameterType="int" resultMap ="noticeMap"> 
		select n.* , rfilename, sfilename, f.no as fileno
		from   noticefile f                                      
		right join  (select no, id, isImportant, category, title, regdate, contents
				 	from   notice 
				 	where  no = #{no}) n
		on   n.no = notino;
		 <!-- select no, id, isImportant, category, title,
       			date_format(regdate, '%y-%m-%d') as regdate, contents
		 from   notice 
		 where  no = #{no} -->
	</select>
	<select id="searchAll" parameterType="pagebean"	resultMap="noticeMap">
		<!-- select no, id, isImportant, category, title,
       		   date_format(regdate, '%y-%m-%d') as regdate, contents
		from   notice -->
		select n.*, rfilename, sfilename, f.no as fileno
		from notice n 
		right join noticefile f 
		on n.no = f.notino
		union
		select n.*, rfilename, sfilename, f.no as fileno
		from notice n
		left join noticefile f 
		on n.no = f.notino;
	</select>
	<select id="count"		parameterType="pagebean"	resultType="int">
		select count(*) as cnt from notice
		<where>
			<if test=" word != null">
				<choose>
					<when test=" key == 'id' ">
						id = #{word}
					</when>
					<when test=" key == 'title' ">
						title like concat('%',#{word},'%')
					</when>
					<when test=" key == 'contents' ">
						contents like concat('%',#{word},'%')
					</when>
				</choose>
			</if>
		</where>
	</select>
	<insert id="insert"			parameterType="notice">
		insert into notice(id, isImportant, category, title, contents) 
		values(#{id:VARCHAR}
			  ,#{isImportant}
			  ,#{category:VARCHAR}
			  ,#{title:VARCHAR}
			  ,#{contents:VARCHAR});
	</insert>
	<insert id="insertfile"		parameterType="noticefile">
		insert into noticefile(rfilename, sfilename, notino) 
		values (#{rfilename:VARCHAR}, #{sfilename:VARCHAR}, #{notino:INTEGER});
	</insert>
		<update id="update" 		parameterType="notice">
		update notice set isImportant=#{isImportant}
						 ,category=#{category} 
		                 ,regdate=now()
		                 ,title=#{title}
						 ,contents=#{contents}
		where no = #{no}				 
	</update>
	
	<delete id="delete"			parameterType="int">
		delete from notice where no = #{no}
	</delete>
	<delete id="deletefile"		parameterType="int">
		delete from noticefile where notino = #{notino}
	</delete>
</mapper>






